name: Code Coverage

on:
  push:
    branches: [project3]
  pull_request:
    branches: [project3]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Adjust this to match your project's Node.js version

    - name: Install dependencies
      run: |
        cd ./frontend
        pwd
        npm install

    - name: Start frontend server
      run: |
        cd ./frontend
        pwd
        nohup npm start &
        sleep 10 # Give the server time to start

    - name: Install Python and Selenium
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Python dependencies
      run: |
        pip install pytest pytest-selenium selenium pytest-cov
    
    # - name: Install Latex
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y texlive-full 

    - name: Run frontend Selenium tests
      run: |
        cd ./frontend/src/test
        pwd
        pytest --cov . --cov-report=xml:coverage-frontend.xml

    - name: Kill frontend server
      run: |
        pkill -f "npm start"


    - name: Upload coverage to Codecov Frontend
      if: always()
      uses: codecov/codecov-action@v3
      with:
          files: ./frontend/coverage-frontend.xml
          flags: frontend
          name: codecov-frontend
          fail_ci_if_error: false
    env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
    #   - name: Debug Coverage
    #    run: |
    #     ls -R
    #     find . -name coverage.xml
    
  backend-tests:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: mydatabase
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      
      # - name: Install LaTeX
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y texlive-full
    
      - name: Install dependencies
        run: |
              python -m pip install --upgrade pip
              pip install -r ./backend/requirements.txt
              sudo apt-get update
              sudo apt-get install -y texlive-xetex texlive-fonts-extra
              
# python -m pip install --upgrade pip
# pip install pytest pytest-cov pytest-selenium selenium
# if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              

      
      - name: Set Multiple Environment Variables
        run: |
            echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV
            echo "REACT_APP_BACKEND_BASE_URL=${{ secrets.REACT_APP_BACKEND_BASE_URL }}" >> $GITHUB_ENV
            echo "MONGODB_HOST_STRING=${{ secrets.MONGODB_HOST_STRING }}" >> $GITHUB_ENV
  
      - name: Set environment variable for MongoDB
        run: echo "MONGODB_HOST_STRING=mongodb://localhost:27017/mydatabase" >> $GITHUB_ENV
        

      - name: Backend tests with pytest
        run: |
          cd backend
          pwd
          pytest --cov . --cov-report=xml:coverage-backend.xml
        
      - name: Upload coverage to Codecov Backend
        if: always()
        uses: codecov/codecov-action@v3
        with:
            files: ./backend/coverage-backend.xml
            flags: backend
            name: codecov-backend
            fail_ci_if_error: false
        env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
        
      - name: Debug Coverage
        run: |
            ls -R
            find . -name coverage.xml
        
